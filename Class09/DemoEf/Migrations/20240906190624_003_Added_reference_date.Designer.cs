// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TodoWebApp.Database;

#nullable disable

namespace DemoEf.Migrations
{
    [DbContext(typeof(DemoDbContext))]
    [Migration("20240906190624_003_Added_reference_date")]
    partial class _003_Added_reference_date
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.31")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DemoEf.Database.Entities.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsActiveCourse")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfClasses")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActiveCourse = false,
                            Name = "C# basic",
                            NumberOfClasses = 40
                        },
                        new
                        {
                            Id = 2,
                            IsActiveCourse = false,
                            Name = "C# Advanced",
                            NumberOfClasses = 60
                        },
                        new
                        {
                            Id = 3,
                            IsActiveCourse = false,
                            Name = "Database development and design",
                            NumberOfClasses = 28
                        },
                        new
                        {
                            Id = 4,
                            IsActiveCourse = false,
                            Name = "ASP.NET Mvc",
                            NumberOfClasses = 40
                        });
                });

            modelBuilder.Entity("DemoEf.Database.Entities.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ActiveCourseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ActiveCourseId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActiveCourseId = 4,
                            DateOfBirth = new DateTime(1997, 9, 6, 21, 6, 24, 405, DateTimeKind.Local).AddTicks(11),
                            FirstName = "Bob",
                            LastName = "Bobski",
                            ParentName = "David"
                        },
                        new
                        {
                            Id = 2,
                            ActiveCourseId = 4,
                            DateOfBirth = new DateTime(1987, 9, 6, 21, 6, 24, 405, DateTimeKind.Local).AddTicks(89),
                            FirstName = "Jill",
                            LastName = "Jilski",
                            ParentName = "Milena"
                        },
                        new
                        {
                            Id = 3,
                            ActiveCourseId = 4,
                            DateOfBirth = new DateTime(1979, 9, 6, 21, 6, 24, 405, DateTimeKind.Local).AddTicks(92),
                            FirstName = "John",
                            LastName = "Doe",
                            ParentName = "Jovan"
                        },
                        new
                        {
                            Id = 4,
                            ActiveCourseId = 4,
                            DateOfBirth = new DateTime(2007, 9, 6, 21, 6, 24, 405, DateTimeKind.Local).AddTicks(95),
                            FirstName = "Jane",
                            LastName = "Doe",
                            ParentName = "Ana"
                        });
                });

            modelBuilder.Entity("DemoEf.Database.Entities.Student", b =>
                {
                    b.HasOne("DemoEf.Database.Entities.Course", "ActiveCourse")
                        .WithMany()
                        .HasForeignKey("ActiveCourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActiveCourse");
                });
#pragma warning restore 612, 618
        }
    }
}
